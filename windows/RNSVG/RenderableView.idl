namespace RNSVG
{
  enum UnitType
  {
    Unknown,
    Number,
    Percentage,
    EMS,
    EXS,
    PX,
    CM,
    MM,
    PT,
    PC,
  };

  [default_interface]
  runtimeclass SVGLength {
    SVGLength();
    SVGLength(Single param);
    SVGLength(Single param, UnitType type);

    Single Value { get; };
    UnitType Unit { get; };
  }

  [default_interface]
  unsealed runtimeclass RenderableView : Windows.UI.Xaml.FrameworkElement
  {
    Windows.UI.Xaml.FrameworkElement SvgParent;
    Windows.UI.Color Fill;
    Single FillOpacity;
    Windows.UI.Color Stroke;
    Single StrokeOpacity;
    SVGLength StrokeWidth;
    Single StrokeMiterLimit;
    Single StrokeDashOffset;
    Microsoft.Graphics.Canvas.Geometry.CanvasCapStyle StrokeLineCap;
    Microsoft.Graphics.Canvas.Geometry.CanvasLineJoin StrokeLineJoin;

    void UpdateProperties(Microsoft.ReactNative.IJSValueReader reader, Boolean invalidate);
    void InvalidateCanvas();

    void Render(
      Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl canvas,
      Microsoft.Graphics.Canvas.CanvasDrawingSession session);
  }

  [default_interface]
  runtimeclass GroupView : RenderableView
  {
    GroupView(Microsoft.ReactNative.IReactContext context);
    Windows.Foundation.Collections.IVector<RenderableView> Children { get; };

    void AddChild(RenderableView child);

    void RenderGroup(
        Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl canvas,
        Microsoft.Graphics.Canvas.CanvasDrawingSession session);
  };

  [default_interface]
  runtimeclass RectView : RenderableView
  {
    RectView();
  }
}
